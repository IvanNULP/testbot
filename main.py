import os
import random
from collections import deque
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    MessageHandler,
    CommandHandler,
    ContextTypes,
    filters,
)
from openai import OpenAI
from aiohttp import web

# === CONFIG ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
AUTHORIZED_USER_ID = 384210176
RENDER_EXTERNAL_URL = os.getenv("RENDER_EXTERNAL_URL")

client = OpenAI(api_key=OPENAI_API_KEY)
CHAT_HISTORY = dict()
MAX_HISTORY = 20

MODES = {
    "polit_anal": "–î–∏–≤–∞–Ω–Ω–∏–π –ø–æ–ª—ñ—Ç–∏—á–Ω–∏–π –∞–Ω–∞–ª—ñ—Ç–∏–∫, –≤—Å—ñ –π–æ–º—É –≤—Å–µ –≤–∏–Ω–Ω—ñ, –Ω–∞—Ä–∞—Ç–∏–≤–∏ —Ä–æ—Å—ñ–π—Å—å–∫–æ–≥–æ —Ç–µ–ª–µ–±–∞—á–µ–Ω–Ω—è.",
    "superexpert": "–†–∞–Ω–¥–æ–º–Ω–∏–π –µ–∫—Å–ø–µ—Ä—Ç –∑ –ø–æ–ª—ñ—Ç–∏—á–Ω–∏—Ö, –∫—É–ª—å—Ç—É—Ä–Ω–∏—Ö, —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏—Ö, –∫–æ—Å–º—ñ—á–Ω–∏—Ö —ñ —ñ–Ω—à–∏—Ö —Å—Ñ–µ—Ä - —Å—É–ø–µ—Ä-—Ç—Ä–æ–ª—å.",
    "zrada": "–ó—Ä–∞–¥–æ-–ø–∞—Ç—Ä—ñ–æ—Ç —ñ–∑ —á–æ—Ä–Ω–∏–º –≥—É–º–æ—Ä–æ–º.",
    "zel_bot": "–ë–æ—Ç –ó–µ–ª–µ–Ω—Å—å–∫–æ–≥–æ, –Ω–µ–Ω–∞–≤–∏–¥–∏—Ç—å –ü–æ—Ä–æ—à–µ–Ω–∫–∞, –æ–±–æ–∂–Ω—î —Å–ª—É–≥—É –Ω–∞—Ä–æ–¥—É, —É –≤—Å—å–æ–º—É –≤–∏–Ω–Ω—ñ –ø–æ–ø–µ—Ä–µ–¥–Ω–∏–∫–∏.",
    "balashov": "–°–≤—ñ–¥–æ–∫ –ë–∞–ª–∞—à–æ–≤–∞, –ø–∞—Ä—Ç—ñ—è '5.10', –ø–æ–ø—É–ª—ñ–∑–º –ø–æ–¥–∞—Ç–∫–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏.",
    "vorchun": "–í–æ—Ä—á—É–Ω-–±—É—Ä—á—É–Ω.",
    "poder": "–õ–µ—Å—å –ü–æ–¥–µ—Ä–≤ º—è–Ω—Å—å–∫–∏–π-—Å—Ç–∞–π–ª: –ø–∞—Ñ–æ—Å, –º–∞—Ç—é–∫–∏, —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞ —Å–∞—Ç–∏—Ä–∞, –≥—Ä–æ—Ç–µ—Å–∫ —ñ —Ç–µ–∞—Ç—Ä, –≤—ñ–¥–æ–º—ñ –≤–∏—Å–ª–æ–≤–∏ –õ–µ—Å—è –ü–æ–¥–µ—Ä–≤ º—è–Ω—Å—å–∫–æ–≥–æ –∑ –º–∞—Ç—é–∫–∞–º–∏ –∑ –π–æ–≥–æ —Ç–≤–æ—Ä—ñ–≤.",
    "visionary": "–Ø—Å–Ω–æ–≤–∏–¥–µ—Ü—å –∑ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª—É ‚Äî –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è –∑ –º—ñ—Å—Ç–∏—á–Ω–∏–º, –∫—É–º–µ–¥–Ω–∏–º —ñ –∞–±—Å—É—Ä–¥–Ω–∏–º –ø—ñ–¥—Ç–µ–∫—Å—Ç–æ–º.",
    "kum": "–ö—É–º –∑ —Å–µ–ª–∞, —Ä–æ–∑–∫–∞–∑—É—î –≤—Å–µ –ø–æ-—Å–≤–æ—î–º—É, –∑ —Ñ–æ–ª—å–∫–ª–æ—Ä–Ω–∏–º –≥—É–º–æ—Ä–æ–º —ñ –ø—Ä–∏–º—ñ—Ç–∏–≤–Ω–æ—é –ª–æ–≥—ñ–∫–æ—é, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –Ω–∞—Ä–æ–¥–Ω–∏–π –∂–∞—Ä–≥–æ–Ω.",
    "rashn_tv": "–ü—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç —ñ–∑ —Ä–∞—à–Ω —Ç–±  ‚Äî –ø–∞—Ñ–æ—Å–Ω–æ –±—Ä–µ—à–µ –ø—Ä–æ –∑–æ–≤–Ω—ñ—à–Ω—ñ –∑–∞–≥—Ä–æ–∑–∏, –≤–∏—Ö–≤–∞–ª—è—î –ø–µ—Ä–µ–º–æ–≥–∏ –Ω–∞–≤—ñ—Ç—å —ñ–∑ –ø–æ—Ä–∞–∑–æ–∫,–Ω–µ–Ω–∞–≤–∏–¥–∏—Ç—å –°–®–ê, –ø–æ—Å—Ç—ñ–π–Ω–æ –∫—Ä–∏—á–∏—Ç—å –ø—Ä–æ –≤–æ—Ä–æ–≥—ñ–≤, —ñ –≥–µ—Ä–æ—ó–∑–º –º–æ—Å–∫–∞–ª—ñ–≤, –ø–µ—Ä–µ–∫—Ä—É—á—É—î –±—É–¥—å-—è–∫—ñ —Ñ–∞–∫—Ç–∏ –Ω–∞ –∫–æ—Ä–∏—Å—Ç—å —Å–≤–æ—ó—Ö. –°–ª–æ–≤–∞ –ø–µ—Ä–µ–º–æ–≥–∞, –≤–æ—Ä–æ–≥–∏, –≥–µ—Ä–æ—ó–∑–º, —Å–≤–æ—ó—Ö ‚Äî —Ü–µ –≤—Å–µ –≤ –ª–∞–ø–∫–∞—Ö, —Ç–æ–±—Ç–æ –ø–µ—Ä–µ–∫—Ä—É—á–µ–Ω—ñ —Ñ–∞–∫—Ç–∏."
}

EMOJIS = {
    "polit_anal": "üìä",
    "superexpert": "üß†",
    "zrada": "üá∫üá¶",
    "zel_bot": "ü§ñ",
    "balashov": "üí∏",
    "vorchun": "üßì",
    "poder": "üé≠",
    "visionary": "üîÆ",
    "kum": "üßÖ",
    "rashn_tv": "üì∫"
}

CURRENT_MODE = {"mode": "auto"}

def is_sentence_complete(text: str) -> bool:
    return text.strip().endswith(('.', '!', '?'))

# === /mode –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É
async def set_mode(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f"üîß –ü–æ—Ç–æ—á–Ω–∏–π —Ä–µ–∂–∏–º: {CURRENT_MODE['mode']}")

# === –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async def handle_all(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    message = update.message

    # –í—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∞–±–æ —è–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–æ—Ç–∞
    if (
        user_id != AUTHORIZED_USER_ID and
        not (message.reply_to_message and message.reply_to_message.from_user and message.reply_to_message.from_user.is_bot)
    ):
        return

    replied_text = message.reply_to_message.text if message.reply_to_message else None

    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —á–∞—Ç—É
    if chat_id not in CHAT_HISTORY:
        CHAT_HISTORY[chat_id] = deque(maxlen=MAX_HISTORY)
    CHAT_HISTORY[chat_id].append(message)

    history_text = "\n".join([m.text for m in CHAT_HISTORY[chat_id] if m.text])
    is_continuation = replied_text is None or replied_text in history_text

    try:
        # === GPT –≤–∏–±—ñ—Ä —Ä–µ–∂–∏–º—É
        combined_text = f"–ö–æ–Ω—Ç–µ–∫—Å—Ç:\n{history_text}\n–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n{message.text}"
        mode_selection = client.chat.completions.create(
            model="gpt-4",
            messages=[
                {
                    "role": "system",
                    "content": (
                        "–ù–∞ –æ—Å–Ω–æ–≤—ñ –Ω–∞–≤–µ–¥–µ–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –≤–∏–±–µ—Ä–∏, —è–∫–∏–π —ñ–∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö —Ç—Ä–æ–ª—ñ–Ω–≥-—Å—Ç–∏–ª—ñ–≤ –Ω–∞–π–∫—Ä–∞—â–µ –ø–∞—Å—É—î –¥–æ —Å–∏—Ç—É–∞—Ü—ñ—ó. "
                        "–û–±–µ—Ä–∏ –æ–¥–∏–Ω —ñ–∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –∫–ª—é—á—ñ–≤ —Ç–æ—á–Ω–æ (–±–µ–∑ –ª–∞–ø–æ–∫, –∫—Ä–∞–ø–æ–∫, –ø–æ—è—Å–Ω–µ–Ω—å):\n\n" +
                        ", ".join(MODES.keys())
                    )
                },
                {"role": "user", "content": combined_text}
            ],
            temperature=0.3,
            max_tokens=10
        )
        mode = mode_selection.choices[0].message.content.strip()

        # –ü—Ä–∏–º—É—Å–æ–≤–æ 20% –Ω–∞ poder
        if mode != "poder" and random.random() < 0.2:
            mode = "poder"

        # === –ü—Ä–æ–º–ø—Ç GPT-–≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        if user_id == AUTHORIZED_USER_ID:
            prompt = (
                f"–¢–∏ ‚Äî {MODES[mode]}. "
                "–¢–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è ‚Äî —Ç—Ä–æ–ª–ª—ñ–Ω–≥-–≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–∏–≤–∞–Ω–Ω–æ–º—É –µ–∫—Å–ø–µ—Ä—Ç—É, —è–∫–∏–π –≤–ø–µ–≤–Ω–µ–Ω–∏–π, —â–æ –∑–Ω–∞—î –≤—Å–µ –∫—Ä–∞—â–µ –∑–∞ –≤—Å—ñ—Ö. "
                "–ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Å–ª–æ–≤–æ —Å–∞–º–æ–∑–∞–∫–æ—Ö–∞–Ω–∏–π —ñ –≤—Å–µ–∑–Ω–∞–π–∫–æ. "
                "–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —è–∫ –∫–æ–Ω—Ç—Ä–∞—Ä–≥—É–º–µ–Ω—Ç –∑ —ñ—Ä–æ–Ω—ñ—î—é, —Å–∞—Ç–∏—Ä–æ—é, –∂–∞—Ä—Ç–æ–º, –º–∞—Ç—é–∫–∞–º–∏. "
                "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Å—Ç–∏–ª—å ‚Äî –∑–≤–µ—Ä—Ç–∞–π—Å—è –Ω–∞ —Ç–∏ –∞–±–æ –Ω–∞ –≤–∏ –¥–æ –∞–≤—Ç–æ—Ä–∞, —ñ–Ω–∫–æ–ª–∏ —è–∫ –ó—ñ–¥–∞–Ω, –ó—ñ–¥–∞–Ω—É—Å, –ú—ñ—à–∞, –ú—ñ—Å—å–∫–æ, —ñ —Ç.–ø., –¥–µ –¥–æ—Ä–µ—á–Ω–æ. "
                "–í—Ä–∞—Ö–æ–≤—É–π —Å—É—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –π–æ–≥–æ –ø–∞—Ñ–æ—Å, —Ç–æ–Ω, —Å—Ç–∏–ª—å, —Å—É—Ç—å –≥—ñ—Ñ–∫–∏ —á–∏ —Å–º–∞–π–ª—ñ–≤. –Ü –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π —Å—Ç–∏–ª—å —Ç—Ä–æ–ª–ª—ñ–Ω–≥—É —â–æ–± –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Å—Ç–æ—Å—É–≤–∞–ª–∞—Å—å —Å–∞–º–µ —Ç—Ä–æ–ª–ª—ñ–Ω–≥—É. –ú–æ–∂–µ—à —ñ–Ω–∫–æ–ª–∏ –≤–∏—Å—Ç—É–ø–∞—Ç–∏ —è–∫ —Ç—Ä–æ–ª–ª—ñ–Ω–≥-–ø—Ä–æ–≤–æ–∫–∞—Ç–æ—Ä —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —á–æ—Ä–Ω–∏–π –≥—É–º–æ—Ä. "
                "–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —è–∫ –∫–æ–Ω—Ç—Ä–∞—Ä–≥—É–º–µ–Ω—Ç, –±—É–¥—å —ñ–Ω–∫–æ–ª–∏ –∞–ª–µ –Ω–µ –∑–∞–≤–∂–¥–∏ —Ü—ñ–Ω—ñ—á–Ω–∏–º. "                
                "–ú–∞–∫—Å–∏–º—É–º 3 —Ä–µ—á–µ–Ω–Ω—è. –ú–æ–∂–Ω–∞ –≥—ñ—Ñ–∫–∏ –∞–±–æ –µ–º–æ–¥–∑—ñ. "
                f"–ö–æ–Ω—Ç–µ–∫—Å—Ç:\n{history_text}\n"
                f"–ü–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n{replied_text or '‚Äî'}\n"
                f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n{message.text}"
            )
        else:
            prompt = (
                f"–¢–∏ ‚Äî {MODES[mode]}. "
                "–¢–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è ‚Äî —Ç—Ä–æ–ª–ª—ñ–Ω–≥-–≤—ñ–¥–ø–æ–≤—ñ–¥—å. "
                "–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —è–∫ –∫–æ–Ω—Ç—Ä–∞—Ä–≥—É–º–µ–Ω—Ç, –±—É–¥—å —ñ–Ω–∫–æ–ª–∏ –∞–ª–µ –Ω–µ –∑–∞–≤–∂–¥–∏ —Ü—ñ–Ω—ñ—á–Ω–∏–º. "
                "–¢–≤–æ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å —ñ–Ω–∫–æ–ª–∏ –º–æ–∂–µ –±—É—Ç–∏ –∂–æ—Ä—Å—Ç–∫–æ—é –∞–ª–µ –∑–∞–≤–∂–¥–∏ –∑ —ñ—Ä–æ–Ω—ñ—î—é, —Å–∞—Ç–∏—Ä–æ—é, –º–æ–∂–ª–∏–≤–æ —Å–∞—Ä–∫–∞–∑–º–æ–º, –≤–º–∏–∫–∞–π —Ñ–∞–Ω—Ç–∞–∑—ñ—é, —Ä–æ–∑–¥—É–º—É–π —è–∫—â–æ —Ç—Ä–µ–±–∞, –≤–µ–¥–∏ —Å–µ–±–µ —è–∫ –ª—é–¥–∏–Ω–∞ —è–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ç–∞–∫–æ–º—É –æ–ø–æ–Ω–µ–Ω—Ç—É, —â–æ–± –ø–æ–∂–∞—Ä—Ç—É–≤–∞—Ç–∏. –Ü–Ω–∫–æ–ª–∏ –º–æ–∂–µ—à –≤–∏—Å—Ç—É–ø–∞—Ç–∏ —è–∫ —Ç—Ä–æ–ª–ª—ñ–Ω–≥-–ø—Ä–æ–≤–æ–∫–∞—Ç–æ—Ä. "
                "–ó–≤–µ—Ä—Ç–∞–π—Å—è –Ω–∞ '—Ç–∏' –∞–±–æ –Ω–∞ '–≤–∏' —è–∫—â–æ –≤—ñ–¥ —Ü—å–æ–≥–æ –±—É–¥–µ —Å–º—ñ—à–Ω—ñ—à–µ —ñ –≤–æ–Ω–æ –ø–∞—Å—É—î –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ. –ú–æ–∂–µ—à –ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–æ—Å—å –ø–æ—è—Å–Ω–∏—Ç–∏ –∞–ª–µ –Ω–µ –≤–∏–ø—Ä–∞–≤–¥–æ–≤—É–π—Å—è –Ω–∞–¥–º—ñ—Ä–Ω–æ. –î–æ–∑–≤–æ–ª—è—é –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –º–∞—Ç—é–∫–∏, –º–∞—Ç–µ—Ä–Ω—ñ —Å–ª–æ–≤–∞, —É–∫—Ä–∞—ó–Ω—Å—å–∫—É –ª–∞–π–∫—É. "
                "–ú–∞–∫—Å–∏–º—É–º 3 —Ä–µ—á–µ–Ω–Ω—è. –ú–æ–∂–Ω–∞ –º–∞—Ç—é–∫–∏, —è–∫—â–æ –ø–∞—Å—É—î. "
                "–ú–æ–∂–µ—à –Ω–∞–¥–∞–≤–∞—Ç–∏ —ñ—Å—Ç–æ—Ä–∏—á–Ω—ñ —Ñ–∞–∫—Ç–∏ –∞–±–æ —Ä–µ–∞–ª—å–Ω—ñ —Ñ–∞–∫—Ç–∏, —â–æ–± –∑–∞—Ç–∫–Ω—É—Ç–∏ –æ–ø–æ–Ω–µ–Ω—Ç–∞. "
                "–ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Å–ª–æ–≤–æ —Å–∞–º–æ–∑–∞–∫–æ—Ö–∞–Ω–∏–π —ñ –≤—Å–µ–∑–Ω–∞–π–∫–æ. "
                f"–ö–æ–Ω—Ç–µ–∫—Å—Ç:\n{history_text}\n"
                f"–ü–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n{replied_text or '‚Äî'}\n"
                f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n{message.text}"
            )

        # === –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è GPT-–≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        response = client.chat.completions.create(
            model="gpt-4",
            messages=[{"role": "system", "content": prompt}],
            temperature=0.7,
            max_tokens=150
        )
        reply = response.choices[0].message.content.strip()
        if not is_sentence_complete(reply):
            reply += "."

        emoji = EMOJIS.get(mode, "")
        await message.reply_text(f"{reply} {emoji}")

    except Exception as e:
        await message.reply_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)}")

# === Webhook-—Å–µ—Ä–≤–µ—Ä
application = ApplicationBuilder().token(BOT_TOKEN).build()
application.add_handler(CommandHandler("mode", set_mode))
application.add_handler(MessageHandler(filters.ALL, handle_all))

app = web.Application()

async def on_startup(app: web.Application):
    await application.initialize()
    webhook_url = RENDER_EXTERNAL_URL.rstrip("/") + "/webhook"
    await application.bot.set_webhook(webhook_url)
    print("üì° Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:", webhook_url)
    app["application"] = application

async def handle_webhook(request: web.Request):
    data = await request.json()
    update = Update.de_json(data, application.bot)
    await application.process_update(update)
    return web.Response()

app.router.add_post("/webhook", handle_webhook)
app.on_startup.append(on_startup)

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 10000))
    print(f"üöÄ –ó–∞–ø—É—Å–∫ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    web.run_app(app, host="0.0.0.0", port=port)
