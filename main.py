import os
import random
from aiohttp import web
from telegram import Update, Message
from telegram.ext import (
    ApplicationBuilder,
    MessageHandler,
    CommandHandler,
    ContextTypes,
    filters,
)
from openai import OpenAI

BOT_TOKEN = os.getenv("BOT_TOKEN")
AUTHORIZED_USER_ID = 384210176
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

client = OpenAI(api_key=OPENAI_API_KEY)

MODES = {    
    "polit_anal": "–î–∏–≤–∞–Ω–Ω–∏–π –ø–æ–ª—ñ—Ç–∏—á–Ω–∏–π –∞–Ω–∞–ª—ñ—Ç–∏–∫, –≤—Å—ñ –π–æ–º—É –≤—Å–µ –≤–∏–Ω–Ω—ñ, –Ω–∞—Ä–∞—Ç–∏–≤–∏ —Ä–æ—Å—ñ–π—Å—å–∫–æ–≥–æ —Ç–µ–ª–µ–±–∞—á–µ–Ω–Ω—è.",
    "superexpert": "–†–∞–Ω–¥–æ–º–Ω–∏–π –µ–∫—Å–ø–µ—Ä—Ç –∑ –ø–æ–ª—ñ—Ç–∏—á–Ω–∏—Ö, –∫—É–ª—å—Ç—É—Ä–Ω–∏—Ö, —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏—Ö, –∫–æ—Å–º—ñ—á–Ω–∏—Ö —ñ —ñ–Ω—à–∏—Ö —Å—Ñ–µ—Ä - —Å—É–ø–µ—Ä-—Ç—Ä–æ–ª—å.",
    "zrada": "–ó—Ä–∞–¥–æ-–ø–∞—Ç—Ä—ñ–æ—Ç —ñ–∑ —á–æ—Ä–Ω–∏–º –≥—É–º–æ—Ä–æ–º.",    
    "zel_bot": "–ë–æ—Ç –ó–µ–ª–µ–Ω—Å—å–∫–æ–≥–æ, –Ω–µ–Ω–∞–≤–∏–¥–∏—Ç—å –ü–æ—Ä–æ—à–µ–Ω–∫–∞, –æ–±–æ–∂–Ω—î —Å–ª—É–≥—É –Ω–∞—Ä–æ–¥—É, —É –≤—Å—å–æ–º—É –≤–∏–Ω–Ω—ñ –ø–æ–ø–µ—Ä–µ–¥–Ω–∏–∫–∏.",
    "balashov": "–°–≤—ñ–¥–æ–∫ –ë–∞–ª–∞—à–æ–≤–∞, –ø–∞—Ä—Ç—ñ—è '5.10', –ø–æ–ø—É–ª—ñ–∑–º –ø–æ–¥–∞—Ç–∫–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏",
    "vorchun": "–í–æ—Ä—á—É–Ω-–±—É—Ä—á—É–Ω.",
    "poder": "–õ–µ—Å—å –ü–æ–¥–µ—Ä–≤ º—è–Ω—Å—å–∫–∏–π-—Å—Ç–∞–π–ª: –ø–∞—Ñ–æ—Å, –º–∞—Ç—é–∫–∏, —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞ —Å–∞—Ç–∏—Ä–∞, –≥—Ä–æ—Ç–µ—Å–∫ —ñ —Ç–µ–∞—Ç—Ä, –≤—ñ–¥–æ–º—ñ –≤–∏—Å–ª–æ–≤–∏ –õ–µ—Å—è –ü–æ–¥–µ—Ä–≤ º—è–Ω—Å—å–∫–æ–≥–æ –∑ –º–∞—Ç—é–∫–∞–º–∏ –∑ –π–æ–≥–æ —Ç–≤–æ—Ä—ñ–≤.",
    "visionary": "–Ø—Å–Ω–æ–≤–∏–¥–µ—Ü—å –∑ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª—É ‚Äî –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è –∑ –º—ñ—Å—Ç–∏—á–Ω–∏–º, –∫—É–º–µ–¥–Ω–∏–º —ñ –∞–±—Å—É—Ä–¥–Ω–∏–º –ø—ñ–¥—Ç–µ–∫—Å—Ç–æ–º.",
    "kum": "–ö—É–º –∑ —Å–µ–ª–∞, —Ä–æ–∑–∫–∞–∑—É—î –≤—Å–µ –ø–æ-—Å–≤–æ—î–º—É, –∑ —Ñ–æ–ª—å–∫–ª–æ—Ä–Ω–∏–º –≥—É–º–æ—Ä–æ–º —ñ –ø—Ä–∏–º—ñ—Ç–∏–≤–Ω–æ—é –ª–æ–≥—ñ–∫–æ—é, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –Ω–∞—Ä–æ–¥–Ω–∏–π –∂–∞—Ä–≥–æ–Ω.",
    "rashn_tv": "–ü—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç —ñ–∑ —Ä–∞—à–Ω —Ç–±  ‚Äî –ø–∞—Ñ–æ—Å–Ω–æ –±—Ä–µ—à–µ –ø—Ä–æ –∑–æ–≤–Ω—ñ—à–Ω—ñ –∑–∞–≥—Ä–æ–∑–∏, –≤–∏—Ö–≤–∞–ª—è—î –ø–µ—Ä–µ–º–æ–≥–∏ –Ω–∞–≤—ñ—Ç—å —ñ–∑ –ø–æ—Ä–∞–∑–æ–∫, –ø–æ—Å—Ç—ñ–π–Ω–æ –∫—Ä–∏—á–∏—Ç—å –ø—Ä–æ –≤–æ—Ä–æ–≥—ñ–≤ —ñ –≥–µ—Ä–æ—ó–∑–º –º–æ—Å–∫–∞–ª—ñ–≤, –ø–µ—Ä–µ–∫—Ä—É—á—É—î –±—É–¥—å-—è–∫—ñ —Ñ–∞–∫—Ç–∏ –Ω–∞ –∫–æ—Ä–∏—Å—Ç—å —Å–≤–æ—ó—Ö. –°–ª–æ–≤–∞ –ø–µ—Ä–µ–º–æ–≥–∞, –≤–æ—Ä–æ–≥–∏, –≥–µ—Ä–æ—ó–∑–º, —Å–≤–æ—ó—Ö ‚Äî —Ü–µ –≤—Å–µ –≤ –ª–∞–ø–∫–∞—Ö, —Ç–æ–±—Ç–æ –ø–µ—Ä–µ–∫—Ä—É—á–µ–Ω—ñ —Ñ–∞–∫—Ç–∏."
}

EMOJIS = {    
    "polit_anal": "üìä",
    "superexpert": "üß†",
    "zrada": "üá∫üá¶",    
    "zel_bot": "ü§ñ",
    "balashov": "üí∏",
    "vorchun": "üßì",
    "poder": "üé≠",
    "visionary": "üîÆ",
    "kum": "üßÖ",
    "rashn_tv": "üì∫"
}

CURRENT_MODE = {"mode": "auto"}

async def set_mode(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != AUTHORIZED_USER_ID:
        return
    if not context.args:
        await update.message.reply_text("–î–æ—Å—Ç—É–ø–Ω—ñ —Ä–µ–∂–∏–º–∏: " + ", ".join(MODES.keys()) + ", auto")
        return
    mode = context.args[0].strip().lower()
    if mode in MODES or mode == "auto":
        CURRENT_MODE["mode"] = mode
        await update.message.reply_text("–†–µ–∂–∏–º –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞: " + mode)
    else:
        await update.message.reply_text("–ù–µ–≤—ñ–¥–æ–º–∏–π —Ä–µ–∂–∏–º.")

async def determine_best_mode(user_text: str, history: str, replied_text: str) -> str:
    # –ü—ñ–¥–≤–∏—â—É—î–º–æ —à–∞–Ω—Å –ø–æ–¥–µ—Ä–≤‚Äô—è–Ω—Å—å–∫–æ–≥–æ –¥–æ 20%
    if random.random() < 0.2:
        return "poder"
    
    mode_prompt = (
        "–¢–∏ –≤–∏–±–∏—Ä–∞—î—à —Å—Ç–∏–ª—å —Ç—Ä–æ–ª—ñ–Ω–≥—É –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–∏–≤–∞–Ω–Ω–æ–≥–æ –µ–∫—Å–ø–µ—Ä—Ç–∞, "
        "—è–∫–∏–π –≤–≤–∞–∂–∞—î —Å–µ–±–µ –¥—É–∂–µ —Ä–æ–∑—É–º–Ω–∏–º. –û–±–µ—Ä–∏ —Å—Ç–∏–ª—å –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö: polit_anal, superexpert, zrada, zel_bot, balashov, vorchun, poder, rashn_tv "
        "–í—Ä–∞—Ö–æ–≤—É–π —Å—É—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –π–æ–≥–æ –ø–∞—Ñ–æ—Å, —Ç–æ–Ω, —Å—Ç–∏–ª—å, —Å—É—Ç—å –≥—ñ—Ñ–∫–∏ —á–∏ —Å–º–∞–π–ª—ñ–≤. –Ü –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π —Å—Ç–∏–ª—å —Ç—Ä–æ–ª–ª—ñ–Ω–≥—É —â–æ–± –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Å—Ç–æ—Å—É–≤–∞–ª–∞—Å—å —Å–∞–º–µ —Ç—Ä–æ–ª–ª—ñ–Ω–≥—É. –ú–æ–∂–µ—à —ñ–Ω–∫–æ–ª–∏ –≤–∏—Å—Ç—É–ø–∞—Ç–∏ —è–∫ —Ç—Ä–æ–ª–ª—ñ–Ω–≥-–ø—Ä–æ–≤–æ–∫–∞—Ç–æ—Ä —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —á–æ—Ä–Ω–∏–π –≥—É–º–æ—Ä. "
        "–ö–æ–Ω—Ç–µ–∫—Å—Ç —ñ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –º–æ–∂—É—Ç—å –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑—Ä–æ–∑—É–º—ñ—Ç–∏ —Å–∏—Ç—É–∞—Ü—ñ—é. "
        "–ü–æ—è—Å–Ω—é–π –Ω—ñ—á–æ–≥–æ –Ω–µ —Ç—Ä–µ–±–∞, –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä–Ω–∏ –Ω–∞–∑–≤—É —Ä–µ–∂–∏–º—É.\n\n"
        f"–ö–æ–Ω—Ç–µ–∫—Å—Ç —á–∞—Ç—É: {history}\n"
        f"–Ø–∫—â–æ —Ü–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —ñ–Ω—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {replied_text}\n"
        f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–ø–∏—Å–∞–≤: {user_text}"
    )

    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": mode_prompt}],
        temperature=0.7,
        max_tokens=10,
    )
    mode = response.choices[0].message.content.strip().lower()
    return mode if mode in MODES else "poder"

async def generate_reply(user_text: str, selected_mode: str, replied_text: str, history: str) -> str:
    prompt = (
        f"–¢–∏ ‚Äî {MODES[selected_mode]}. "
        "–¢–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è ‚Äî —Ç—Ä–æ–ª–ª—ñ–Ω–≥-–≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–∏–≤–∞–Ω–Ω–æ–º—É –µ–∫—Å–ø–µ—Ä—Ç—É, —è–∫–∏–π –≤–ø–µ–≤–Ω–µ–Ω–∏–π, —â–æ –∑–Ω–∞—î –≤—Å–µ –∫—Ä–∞—â–µ –∑–∞ –≤—Å—ñ—Ö. "
"–ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Å–ª–æ–≤–æ —Å–∞–º–æ–∑–∞–∫–æ—Ö–∞–Ω–∏–π —ñ –≤—Å–µ–∑–Ω–∞–π–∫–æ —ñ —ó—Ö —Å–∏–Ω–æ–Ω—ñ–º–∏ –ø—Ä–æ—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä—è–π —Ç–µ–∫—Å—Ç –Ω–∞ –≥—Ä–∞–º–º–∞—Ç–∏—á–Ω—ñ —ñ —Å—Ç–∏–ª—ñ—Å—Ç–∏—á–Ω—ñ –ø–æ–º–∏–ª–∫–∏. –ü–µ—Ä–µ—Å–≤—ñ–¥—á–∏—Å—å, —â–æ —Ç–µ–∫—Å—Ç –ª–æ–≥—ñ—á–Ω–∏–π —ñ –º–∞—î –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è. "
"–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —è–∫ –∫–æ–Ω—Ç—Ä–∞—Ä–≥—É–º–µ–Ω—Ç, –±—É–¥—å —ñ–Ω–∫–æ–ª–∏ –∞–ª–µ –Ω–µ –∑–∞–≤–∂–¥–∏ —Ü—ñ–Ω—ñ—á–Ω–∏–º. "
        "–¢–≤–æ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å —ñ–Ω–∫–æ–ª–∏ –º–æ–∂–µ –±—É—Ç–∏ –∂–æ—Ä—Å—Ç–∫–æ—é –∞–ª–µ –∑–∞–≤–∂–¥–∏ –∑ —ñ—Ä–æ–Ω—ñ—î—é, —Å–∞—Ç–∏—Ä–æ—é, –º–æ–∂–ª–∏–≤–æ —Å–∞—Ä–∫–∞–∑–º–æ–º, –≤–º–∏–∫–∞–π —Ñ–∞–Ω—Ç–∞–∑—ñ—é, —Ä–æ–∑–¥—É–º—É–π —è–∫—â–æ —Ç—Ä–µ–±–∞, –≤–µ–¥–∏ —Å–µ–±–µ —è–∫ –ª—é–¥–∏–Ω–∞ —è–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ç–∞–∫–æ–º—É –æ–ø–æ–Ω–µ–Ω—Ç—É, —â–æ–± –ø–æ–∂–∞—Ä—Ç—É–≤–∞—Ç–∏. –Ü–Ω–∫–æ–ª–∏ –º–æ–∂–µ—à –≤–∏—Å—Ç—É–ø–∞—Ç–∏ —è–∫ —Ç—Ä–æ–ª–ª—ñ–Ω–≥-–ø—Ä–æ–≤–æ–∫–∞—Ç–æ—Ä. "
        "–ó–≤–µ—Ä—Ç–∞–π—Å—è –Ω–∞ '—Ç–∏' –∞–±–æ –Ω–∞ '–≤–∏' —è–∫—â–æ –≤—ñ–¥ —Ü—å–æ–≥–æ –±—É–¥–µ —Å–º—ñ—à–Ω—ñ—à–µ —ñ –≤–æ–Ω–æ –ø–∞—Å—É—î –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ. –ú–æ–∂–µ—à –ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–æ—Å—å –ø–æ—è—Å–Ω–∏—Ç–∏ –∞–ª–µ –Ω–µ –≤–∏–ø—Ä–∞–≤–¥–æ–≤—É–π—Å—è –Ω–∞–¥–º—ñ—Ä–Ω–æ. –î–æ–∑–≤–æ–ª—è—é –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –º–∞—Ç—é–∫–∏, –º–∞—Ç–µ—Ä–Ω—ñ —Å–ª–æ–≤–∞, —É–∫—Ä–∞—ó–Ω—Å—å–∫—É –ª–∞–π–∫—É. –¢–∞–∫–æ–∂ –º–æ–∂–µ—à —ñ–Ω–∫–æ–ª–∏, –∞–ª–µ –Ω–µ –∑–∞–≤–∂–¥–∏, –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—å –¥–æ –∞–≤—Ç–æ—Ä–∞ –∑–∞ —ñ–º–µ–Ω–µ–º- –ó—ñ–¥–∞–Ω, –ó—ñ–¥–∞–Ω–≥–∞, –ó—ñ–¥–∞–Ω—É—Å, –ó—ñ–¥–∞—É–Ω, –ú–∏—Ö–∞–π–ª–æ, –ú—ñ—Å—å–∫–æ, –ú–∏—Ö—É—ó–ª, –ú—ñ—à–∞ —Ç–∞ —ñ–Ω—à—ñ –ø–æ–¥—ñ–±–Ω—ñ –ø–æ—Ö—ñ–¥–Ω—ñ —ñ–º–µ–Ω–∞. –ó—ñ–¥–∞–Ω–≥–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–æ–ª–∏ –∞–≤—Ç–æ—Ä –≥–æ–≤–æ—Ä–∏—Ç—å –ø—Ä–æ –º–∞–π–±—É—Ç–Ω—î —è–∫ –í–∞–Ω–≥–∞. "
        "–í—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –±—É—Ç–∏ –Ω–µ –≤–µ–ª–∏–∫–∞. –ú–∞–∫—Å–∏–º—É–º –Ω–∞ 3 —Ä–µ—á–µ–Ω–Ω—è. –Ø–∫—â–æ —Ç—Ä–µ–±–∞ –º–æ–∂–µ—à –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —Å–º–∞–π–ª–∏–∫–∏ –∞–±–æ –≥—ñ—Ñ–∫—É. "
        f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {history}\n"
        f"–Ø–∫—â–æ —Ü–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —ñ–Ω—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {replied_text}\n"
        f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {user_text}"
    )

    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.95,
        max_tokens=150,
    )
    return response.choices[0].message.content.strip()

async def handle_all(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message: Message = update.message
    if not message or update.effective_user.id != AUTHORIZED_USER_ID:
        return

    user_text = message.text or message.caption or "(–ú–µ–¥—ñ–∞ –∞–±–æ —Å—Ç—ñ–∫–µ—Ä)"
    replied_text = ""
    if message.reply_to_message:
        replied_text = message.reply_to_message.text or message.reply_to_message.caption or "(–ú–µ–¥—ñ–∞)"

    history = context.chat_data.get("last", "")
    context.chat_data["last"] = user_text

    try:
        if CURRENT_MODE["mode"] == "auto":
            selected_mode = await determine_best_mode(user_text, history, replied_text)
        else:
            selected_mode = CURRENT_MODE["mode"]
        reply = await generate_reply(user_text, selected_mode, replied_text, history)
    except Exception as e:
        import traceback
        traceback.print_exc()
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        reply = "–¢–∞ —Ç–∏ –≤–∂–µ —Å–∞–º —Å–µ–±–µ –ø–µ—Ä–µ–≥—Ä—É–∑–∏–≤. –ü–µ—Ä–µ—Ñ—Ä–∞–∑—É–π –Ω–æ—Ä–º–∞–ª—å–Ω–æ üòâ"
        selected_mode = "poder"

    await message.reply_text(f"{reply} {EMOJIS.get(selected_mode, 'üé≠')}", reply_to_message_id=message.message_id)

application = ApplicationBuilder().token(BOT_TOKEN).build()
application.add_handler(CommandHandler("mode", set_mode))
application.add_handler(MessageHandler(filters.ALL, handle_all))

app = web.Application()

async def on_startup(app: web.Application):
    await application.initialize()
    webhook_url = os.getenv("RENDER_EXTERNAL_URL") + "/webhook"
    await application.bot.set_webhook(webhook_url)
    print("üì° Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: " + webhook_url)
    app["application"] = application

async def handle_webhook(request: web.Request):
    data = await request.json()
    update = Update.de_json(data, application.bot)
    await application.process_update(update)
    return web.Response()

app.router.add_post("/webhook", handle_webhook)
app.on_startup.append(on_startup)

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 10000))
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É", port)
    web.run_app(app, host="0.0.0.0", port=port)
